[{"/Users/karina/Desktop/RubiksCube/rubcube-app/src/index.js":"1","/Users/karina/Desktop/RubiksCube/rubcube-app/src/App.js":"2","/Users/karina/Desktop/RubiksCube/rubcube-app/src/reportWebVitals.js":"3","/Users/karina/Desktop/RubiksCube/rubcube-app/src/components/Cube.js":"4","/Users/karina/Desktop/RubiksCube/rubcube-app/src/components/CubeDetails.js":"5","/Users/karina/Desktop/RubiksCube/rubcube-app/src/components/Home.js":"6","/Users/karina/Desktop/RubiksCube/rubcube-app/src/store/reducers/index.js":"7","/Users/karina/Desktop/RubiksCube/rubcube-app/src/store/actions/generalActions.js":"8"},{"size":915,"mtime":1613295019000,"results":"9","hashOfConfig":"10"},{"size":339,"mtime":1613294927000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609293605000,"results":"12","hashOfConfig":"10"},{"size":532,"mtime":1612936240000,"results":"13","hashOfConfig":"10"},{"size":589,"mtime":1612936191000,"results":"14","hashOfConfig":"10"},{"size":404,"mtime":1613295041000,"results":"15","hashOfConfig":"10"},{"size":859,"mtime":1613292488000,"results":"16","hashOfConfig":"10"},{"size":608,"mtime":1613289643000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"77spsy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/karina/Desktop/RubiksCube/rubcube-app/src/index.js",[],["40","41"],"/Users/karina/Desktop/RubiksCube/rubcube-app/src/App.js",["42"],"import logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home'\nimport { Route, Switch } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/karina/Desktop/RubiksCube/rubcube-app/src/reportWebVitals.js",[],"/Users/karina/Desktop/RubiksCube/rubcube-app/src/components/Cube.js",["43","44"],"import React, {useState} from 'react'\nimport CubeDetails from './CubeDetails.js'\nimport { connect } from 'react-redux'\n\n\nconst Cube = () => {\n    const [state, setState] = useState(null)\n    return(\n        <div>\n            <div>\n                <CubeDetails/> \n            </div>\n            <button /*id= 'initial-botton' onClick= { () => toggle()}*/>\n                Button   \n            </button>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return{\n\n    }\n}\n\nexport default connect(mapStateToProps,)(Cube)","/Users/karina/Desktop/RubiksCube/rubcube-app/src/components/CubeDetails.js",["45","46"],"import React, {useState} from 'react';\nimport { connect } from 'react-redux'\n\n\n\nconst CubeDetails = () => {\n    const [state, setState] = useState(null)\n   return (\n       <div id = \"cubeRepresentation\">\n         {/*I have to build a 3D object with three axis, each with three cube sides*/}\n         {/* How can I build this: \n          1. Build x, y, z axes\n          2. Add three squares to each axis */}     \n\n        <h2> Cube Visualization </h2>\n\n       </div>\n   )\n\n   \n}\n\nconst mapStateToProps = state => {\n    return{\n\n    }\n}\n\nexport default connect(mapStateToProps,)(CubeDetails)",["47","48"],"/Users/karina/Desktop/RubiksCube/rubcube-app/src/components/Home.js",["49","50"],"import React, {useState} from 'react';\nimport Cube from './Cube';\nimport { connect } from 'react-redux'\n\n\nconst Home = () => {\n\n  const [state, setState] = useState(null)\n  return(\n    <div>\n      <Cube> Solve the Rubik's Cube </Cube>  \n    </div>\n)\n\n}\n\n//maptStateToProps gets state from the store\nconst mapStateToProps = state => {\n    return{\n\n    }\n}\n\nexport default connect(mapStateToProps, ) (Home)","/Users/karina/Desktop/RubiksCube/rubcube-app/src/store/reducers/index.js",[],"/Users/karina/Desktop/RubiksCube/rubcube-app/src/store/actions/generalActions.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":7,"column":12,"nodeType":"57","messageId":"58","endLine":7,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":7,"column":19,"nodeType":"57","messageId":"58","endLine":7,"endColumn":27},{"ruleId":"55","severity":1,"message":"59","line":7,"column":12,"nodeType":"57","messageId":"58","endLine":7,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":7,"column":19,"nodeType":"57","messageId":"58","endLine":7,"endColumn":27},{"ruleId":"51","replacedBy":"61"},{"ruleId":"53","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"59","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":15},{"ruleId":"55","severity":1,"message":"60","line":8,"column":17,"nodeType":"57","messageId":"58","endLine":8,"endColumn":25},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'setState' is assigned a value but never used.",["63"],["64"],"no-global-assign","no-unsafe-negation"]